
stm32f0xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000478  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000538  08000540  00010540  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000538  08000538  00010540  2**0
                  CONTENTS
  4 .ARM          00000000  08000538  08000538  00010540  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000538  08000540  00010540  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000538  08000538  00010538  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800053c  0800053c  0001053c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010540  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000540  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000540  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00010540  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000760  00000000  00000000  00010568  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000022c  00000000  00000000  00010cc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000a8  00000000  00000000  00010ef8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000080  00000000  00000000  00010fa0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001284  00000000  00000000  00011020  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000b2b  00000000  00000000  000122a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00004b43  00000000  00000000  00012dcf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00017912  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000190  00000000  00000000  00017964  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000000 	.word	0x20000000
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08000520 	.word	0x08000520

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000004 	.word	0x20000004
 8000104:	08000520 	.word	0x08000520

08000108 <delay>:
 *      Author: xraid
 */

#include "stm32f030xx.h"

void delay(){
 8000108:	b580      	push	{r7, lr}
 800010a:	b082      	sub	sp, #8
 800010c:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 250000; ++i);
 800010e:	2300      	movs	r3, #0
 8000110:	607b      	str	r3, [r7, #4]
 8000112:	e002      	b.n	800011a <delay+0x12>
 8000114:	687b      	ldr	r3, [r7, #4]
 8000116:	3301      	adds	r3, #1
 8000118:	607b      	str	r3, [r7, #4]
 800011a:	687b      	ldr	r3, [r7, #4]
 800011c:	4a03      	ldr	r2, [pc, #12]	; (800012c <delay+0x24>)
 800011e:	4293      	cmp	r3, r2
 8000120:	d9f8      	bls.n	8000114 <delay+0xc>
}
 8000122:	46c0      	nop			; (mov r8, r8)
 8000124:	46c0      	nop			; (mov r8, r8)
 8000126:	46bd      	mov	sp, r7
 8000128:	b002      	add	sp, #8
 800012a:	bd80      	pop	{r7, pc}
 800012c:	0003d08f 	.word	0x0003d08f

08000130 <main>:

int main(void){
 8000130:	b580      	push	{r7, lr}
 8000132:	b084      	sub	sp, #16
 8000134:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed;

 	GpioLed.pGPIOx = GPIOA;
 8000136:	1d3b      	adds	r3, r7, #4
 8000138:	2290      	movs	r2, #144	; 0x90
 800013a:	05d2      	lsls	r2, r2, #23
 800013c:	601a      	str	r2, [r3, #0]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_4;
 800013e:	1d3b      	adds	r3, r7, #4
 8000140:	2204      	movs	r2, #4
 8000142:	711a      	strb	r2, [r3, #4]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000144:	1d3b      	adds	r3, r7, #4
 8000146:	2201      	movs	r2, #1
 8000148:	715a      	strb	r2, [r3, #5]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_HIGH;
 800014a:	1d3b      	adds	r3, r7, #4
 800014c:	2203      	movs	r2, #3
 800014e:	719a      	strb	r2, [r3, #6]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OD;
 8000150:	1d3b      	adds	r3, r7, #4
 8000152:	2201      	movs	r2, #1
 8000154:	721a      	strb	r2, [r3, #8]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000156:	1d3b      	adds	r3, r7, #4
 8000158:	2200      	movs	r2, #0
 800015a:	71da      	strb	r2, [r3, #7]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 800015c:	2390      	movs	r3, #144	; 0x90
 800015e:	05db      	lsls	r3, r3, #23
 8000160:	2101      	movs	r1, #1
 8000162:	0018      	movs	r0, r3
 8000164:	f000 f838 	bl	80001d8 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);
 8000168:	1d3b      	adds	r3, r7, #4
 800016a:	0018      	movs	r0, r3
 800016c:	f000 f8cc 	bl	8000308 <GPIO_Init>

	while(1){

		GPIO_ToggleOutputPin(GPIOA, 4);
 8000170:	2390      	movs	r3, #144	; 0x90
 8000172:	05db      	lsls	r3, r3, #23
 8000174:	2104      	movs	r1, #4
 8000176:	0018      	movs	r0, r3
 8000178:	f000 f999 	bl	80004ae <GPIO_ToggleOutputPin>
		delay();
 800017c:	f7ff ffc4 	bl	8000108 <delay>
		GPIO_ToggleOutputPin(GPIOA, 4);
 8000180:	e7f6      	b.n	8000170 <main+0x40>
	...

08000184 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000184:	480d      	ldr	r0, [pc, #52]	; (80001bc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000186:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000188:	e000      	b.n	800018c <Reset_Handler+0x8>
 800018a:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800018c:	480c      	ldr	r0, [pc, #48]	; (80001c0 <LoopForever+0x6>)
  ldr r1, =_edata
 800018e:	490d      	ldr	r1, [pc, #52]	; (80001c4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000190:	4a0d      	ldr	r2, [pc, #52]	; (80001c8 <LoopForever+0xe>)
  movs r3, #0
 8000192:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000194:	e002      	b.n	800019c <LoopCopyDataInit>

08000196 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000196:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000198:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800019a:	3304      	adds	r3, #4

0800019c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800019c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800019e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80001a0:	d3f9      	bcc.n	8000196 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80001a2:	4a0a      	ldr	r2, [pc, #40]	; (80001cc <LoopForever+0x12>)
  ldr r4, =_ebss
 80001a4:	4c0a      	ldr	r4, [pc, #40]	; (80001d0 <LoopForever+0x16>)
  movs r3, #0
 80001a6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80001a8:	e001      	b.n	80001ae <LoopFillZerobss>

080001aa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80001aa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80001ac:	3204      	adds	r2, #4

080001ae <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80001ae:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80001b0:	d3fb      	bcc.n	80001aa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80001b2:	f000 f991 	bl	80004d8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80001b6:	f7ff ffbb 	bl	8000130 <main>

080001ba <LoopForever>:

LoopForever:
    b LoopForever
 80001ba:	e7fe      	b.n	80001ba <LoopForever>
  ldr   r0, =_estack
 80001bc:	20001000 	.word	0x20001000
  ldr r0, =_sdata
 80001c0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80001c4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80001c8:	08000540 	.word	0x08000540
  ldr r2, =_sbss
 80001cc:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80001d0:	2000001c 	.word	0x2000001c

080001d4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80001d4:	e7fe      	b.n	80001d4 <ADC_IRQHandler>
	...

080001d8 <GPIO_PeriClockControl>:
 *
 * @Note				-	none

 */

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t ENorDI){
 80001d8:	b580      	push	{r7, lr}
 80001da:	b082      	sub	sp, #8
 80001dc:	af00      	add	r7, sp, #0
 80001de:	6078      	str	r0, [r7, #4]
 80001e0:	000a      	movs	r2, r1
 80001e2:	1cfb      	adds	r3, r7, #3
 80001e4:	701a      	strb	r2, [r3, #0]

	if(ENorDI == ENABLE){
 80001e6:	1cfb      	adds	r3, r7, #3
 80001e8:	781b      	ldrb	r3, [r3, #0]
 80001ea:	2b01      	cmp	r3, #1
 80001ec:	d13c      	bne.n	8000268 <GPIO_PeriClockControl+0x90>
		if(pGPIOx == GPIOA){
 80001ee:	687a      	ldr	r2, [r7, #4]
 80001f0:	2390      	movs	r3, #144	; 0x90
 80001f2:	05db      	lsls	r3, r3, #23
 80001f4:	429a      	cmp	r2, r3
 80001f6:	d107      	bne.n	8000208 <GPIO_PeriClockControl+0x30>
			GPIOA_PCLK_EN();
 80001f8:	4b39      	ldr	r3, [pc, #228]	; (80002e0 <GPIO_PeriClockControl+0x108>)
 80001fa:	695a      	ldr	r2, [r3, #20]
 80001fc:	4b38      	ldr	r3, [pc, #224]	; (80002e0 <GPIO_PeriClockControl+0x108>)
 80001fe:	2180      	movs	r1, #128	; 0x80
 8000200:	0289      	lsls	r1, r1, #10
 8000202:	430a      	orrs	r2, r1
 8000204:	615a      	str	r2, [r3, #20]
			GPIOD_PCLK_DI();
		}else if(pGPIOx == GPIOF){
			GPIOF_PCLK_DI();
		}
	}
}
 8000206:	e066      	b.n	80002d6 <GPIO_PeriClockControl+0xfe>
		}else if(pGPIOx == GPIOB){
 8000208:	687b      	ldr	r3, [r7, #4]
 800020a:	4a36      	ldr	r2, [pc, #216]	; (80002e4 <GPIO_PeriClockControl+0x10c>)
 800020c:	4293      	cmp	r3, r2
 800020e:	d107      	bne.n	8000220 <GPIO_PeriClockControl+0x48>
			GPIOB_PCLK_EN();
 8000210:	4b33      	ldr	r3, [pc, #204]	; (80002e0 <GPIO_PeriClockControl+0x108>)
 8000212:	695a      	ldr	r2, [r3, #20]
 8000214:	4b32      	ldr	r3, [pc, #200]	; (80002e0 <GPIO_PeriClockControl+0x108>)
 8000216:	2180      	movs	r1, #128	; 0x80
 8000218:	02c9      	lsls	r1, r1, #11
 800021a:	430a      	orrs	r2, r1
 800021c:	615a      	str	r2, [r3, #20]
}
 800021e:	e05a      	b.n	80002d6 <GPIO_PeriClockControl+0xfe>
		}else if(pGPIOx == GPIOC){
 8000220:	687b      	ldr	r3, [r7, #4]
 8000222:	4a31      	ldr	r2, [pc, #196]	; (80002e8 <GPIO_PeriClockControl+0x110>)
 8000224:	4293      	cmp	r3, r2
 8000226:	d107      	bne.n	8000238 <GPIO_PeriClockControl+0x60>
			GPIOC_PCLK_EN();
 8000228:	4b2d      	ldr	r3, [pc, #180]	; (80002e0 <GPIO_PeriClockControl+0x108>)
 800022a:	695a      	ldr	r2, [r3, #20]
 800022c:	4b2c      	ldr	r3, [pc, #176]	; (80002e0 <GPIO_PeriClockControl+0x108>)
 800022e:	2180      	movs	r1, #128	; 0x80
 8000230:	0309      	lsls	r1, r1, #12
 8000232:	430a      	orrs	r2, r1
 8000234:	615a      	str	r2, [r3, #20]
}
 8000236:	e04e      	b.n	80002d6 <GPIO_PeriClockControl+0xfe>
		}else if(pGPIOx == GPIOD){
 8000238:	687b      	ldr	r3, [r7, #4]
 800023a:	4a2c      	ldr	r2, [pc, #176]	; (80002ec <GPIO_PeriClockControl+0x114>)
 800023c:	4293      	cmp	r3, r2
 800023e:	d107      	bne.n	8000250 <GPIO_PeriClockControl+0x78>
			GPIOD_PCLK_EN();
 8000240:	4b27      	ldr	r3, [pc, #156]	; (80002e0 <GPIO_PeriClockControl+0x108>)
 8000242:	695a      	ldr	r2, [r3, #20]
 8000244:	4b26      	ldr	r3, [pc, #152]	; (80002e0 <GPIO_PeriClockControl+0x108>)
 8000246:	2180      	movs	r1, #128	; 0x80
 8000248:	0349      	lsls	r1, r1, #13
 800024a:	430a      	orrs	r2, r1
 800024c:	615a      	str	r2, [r3, #20]
}
 800024e:	e042      	b.n	80002d6 <GPIO_PeriClockControl+0xfe>
		}else if(pGPIOx == GPIOF){
 8000250:	687b      	ldr	r3, [r7, #4]
 8000252:	4a27      	ldr	r2, [pc, #156]	; (80002f0 <GPIO_PeriClockControl+0x118>)
 8000254:	4293      	cmp	r3, r2
 8000256:	d13e      	bne.n	80002d6 <GPIO_PeriClockControl+0xfe>
			GPIOF_PCLK_EN();
 8000258:	4b21      	ldr	r3, [pc, #132]	; (80002e0 <GPIO_PeriClockControl+0x108>)
 800025a:	695a      	ldr	r2, [r3, #20]
 800025c:	4b20      	ldr	r3, [pc, #128]	; (80002e0 <GPIO_PeriClockControl+0x108>)
 800025e:	2180      	movs	r1, #128	; 0x80
 8000260:	03c9      	lsls	r1, r1, #15
 8000262:	430a      	orrs	r2, r1
 8000264:	615a      	str	r2, [r3, #20]
}
 8000266:	e036      	b.n	80002d6 <GPIO_PeriClockControl+0xfe>
		if(pGPIOx == GPIOA){
 8000268:	687a      	ldr	r2, [r7, #4]
 800026a:	2390      	movs	r3, #144	; 0x90
 800026c:	05db      	lsls	r3, r3, #23
 800026e:	429a      	cmp	r2, r3
 8000270:	d106      	bne.n	8000280 <GPIO_PeriClockControl+0xa8>
			GPIOA_PCLK_DI();
 8000272:	4b1b      	ldr	r3, [pc, #108]	; (80002e0 <GPIO_PeriClockControl+0x108>)
 8000274:	695a      	ldr	r2, [r3, #20]
 8000276:	4b1a      	ldr	r3, [pc, #104]	; (80002e0 <GPIO_PeriClockControl+0x108>)
 8000278:	491e      	ldr	r1, [pc, #120]	; (80002f4 <GPIO_PeriClockControl+0x11c>)
 800027a:	400a      	ands	r2, r1
 800027c:	615a      	str	r2, [r3, #20]
}
 800027e:	e02a      	b.n	80002d6 <GPIO_PeriClockControl+0xfe>
		}else if(pGPIOx == GPIOB){
 8000280:	687b      	ldr	r3, [r7, #4]
 8000282:	4a18      	ldr	r2, [pc, #96]	; (80002e4 <GPIO_PeriClockControl+0x10c>)
 8000284:	4293      	cmp	r3, r2
 8000286:	d106      	bne.n	8000296 <GPIO_PeriClockControl+0xbe>
			GPIOB_PCLK_DI();
 8000288:	4b15      	ldr	r3, [pc, #84]	; (80002e0 <GPIO_PeriClockControl+0x108>)
 800028a:	695a      	ldr	r2, [r3, #20]
 800028c:	4b14      	ldr	r3, [pc, #80]	; (80002e0 <GPIO_PeriClockControl+0x108>)
 800028e:	491a      	ldr	r1, [pc, #104]	; (80002f8 <GPIO_PeriClockControl+0x120>)
 8000290:	400a      	ands	r2, r1
 8000292:	615a      	str	r2, [r3, #20]
}
 8000294:	e01f      	b.n	80002d6 <GPIO_PeriClockControl+0xfe>
		}else if(pGPIOx == GPIOC){
 8000296:	687b      	ldr	r3, [r7, #4]
 8000298:	4a13      	ldr	r2, [pc, #76]	; (80002e8 <GPIO_PeriClockControl+0x110>)
 800029a:	4293      	cmp	r3, r2
 800029c:	d106      	bne.n	80002ac <GPIO_PeriClockControl+0xd4>
			GPIOC_PCLK_DI();
 800029e:	4b10      	ldr	r3, [pc, #64]	; (80002e0 <GPIO_PeriClockControl+0x108>)
 80002a0:	695a      	ldr	r2, [r3, #20]
 80002a2:	4b0f      	ldr	r3, [pc, #60]	; (80002e0 <GPIO_PeriClockControl+0x108>)
 80002a4:	4915      	ldr	r1, [pc, #84]	; (80002fc <GPIO_PeriClockControl+0x124>)
 80002a6:	400a      	ands	r2, r1
 80002a8:	615a      	str	r2, [r3, #20]
}
 80002aa:	e014      	b.n	80002d6 <GPIO_PeriClockControl+0xfe>
		}else if(pGPIOx == GPIOD){
 80002ac:	687b      	ldr	r3, [r7, #4]
 80002ae:	4a0f      	ldr	r2, [pc, #60]	; (80002ec <GPIO_PeriClockControl+0x114>)
 80002b0:	4293      	cmp	r3, r2
 80002b2:	d106      	bne.n	80002c2 <GPIO_PeriClockControl+0xea>
			GPIOD_PCLK_DI();
 80002b4:	4b0a      	ldr	r3, [pc, #40]	; (80002e0 <GPIO_PeriClockControl+0x108>)
 80002b6:	695a      	ldr	r2, [r3, #20]
 80002b8:	4b09      	ldr	r3, [pc, #36]	; (80002e0 <GPIO_PeriClockControl+0x108>)
 80002ba:	4911      	ldr	r1, [pc, #68]	; (8000300 <GPIO_PeriClockControl+0x128>)
 80002bc:	400a      	ands	r2, r1
 80002be:	615a      	str	r2, [r3, #20]
}
 80002c0:	e009      	b.n	80002d6 <GPIO_PeriClockControl+0xfe>
		}else if(pGPIOx == GPIOF){
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	4a0a      	ldr	r2, [pc, #40]	; (80002f0 <GPIO_PeriClockControl+0x118>)
 80002c6:	4293      	cmp	r3, r2
 80002c8:	d105      	bne.n	80002d6 <GPIO_PeriClockControl+0xfe>
			GPIOF_PCLK_DI();
 80002ca:	4b05      	ldr	r3, [pc, #20]	; (80002e0 <GPIO_PeriClockControl+0x108>)
 80002cc:	695a      	ldr	r2, [r3, #20]
 80002ce:	4b04      	ldr	r3, [pc, #16]	; (80002e0 <GPIO_PeriClockControl+0x108>)
 80002d0:	490c      	ldr	r1, [pc, #48]	; (8000304 <GPIO_PeriClockControl+0x12c>)
 80002d2:	400a      	ands	r2, r1
 80002d4:	615a      	str	r2, [r3, #20]
}
 80002d6:	46c0      	nop			; (mov r8, r8)
 80002d8:	46bd      	mov	sp, r7
 80002da:	b002      	add	sp, #8
 80002dc:	bd80      	pop	{r7, pc}
 80002de:	46c0      	nop			; (mov r8, r8)
 80002e0:	40021000 	.word	0x40021000
 80002e4:	48000400 	.word	0x48000400
 80002e8:	48000800 	.word	0x48000800
 80002ec:	48000c00 	.word	0x48000c00
 80002f0:	48001400 	.word	0x48001400
 80002f4:	fffdffff 	.word	0xfffdffff
 80002f8:	fffbffff 	.word	0xfffbffff
 80002fc:	fff7ffff 	.word	0xfff7ffff
 8000300:	ffefffff 	.word	0xffefffff
 8000304:	ffbfffff 	.word	0xffbfffff

08000308 <GPIO_Init>:
 *
 * @Note				-	none

 */

void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 8000308:	b5b0      	push	{r4, r5, r7, lr}
 800030a:	b084      	sub	sp, #16
 800030c:	af00      	add	r7, sp, #0
 800030e:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0; //temporary register
 8000310:	2300      	movs	r3, #0
 8000312:	60fb      	str	r3, [r7, #12]
	//1. configure the mode of the GPIO (interrupt or non interrupt)
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	795b      	ldrb	r3, [r3, #5]
 8000318:	2b03      	cmp	r3, #3
 800031a:	d81e      	bhi.n	800035a <GPIO_Init+0x52>
		//non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	795b      	ldrb	r3, [r3, #5]
 8000320:	001a      	movs	r2, r3
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	791b      	ldrb	r3, [r3, #4]
 8000326:	005b      	lsls	r3, r3, #1
 8000328:	409a      	lsls	r2, r3
 800032a:	0013      	movs	r3, r2
 800032c:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	681b      	ldr	r3, [r3, #0]
 8000332:	681a      	ldr	r2, [r3, #0]
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	791b      	ldrb	r3, [r3, #4]
 8000338:	0019      	movs	r1, r3
 800033a:	2303      	movs	r3, #3
 800033c:	408b      	lsls	r3, r1
 800033e:	43db      	mvns	r3, r3
 8000340:	0019      	movs	r1, r3
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	681b      	ldr	r3, [r3, #0]
 8000346:	400a      	ands	r2, r1
 8000348:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; //setting
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	681b      	ldr	r3, [r3, #0]
 800034e:	6819      	ldr	r1, [r3, #0]
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	681b      	ldr	r3, [r3, #0]
 8000354:	68fa      	ldr	r2, [r7, #12]
 8000356:	430a      	orrs	r2, r1
 8000358:	601a      	str	r2, [r3, #0]

	}else{
		//interrupt mode
		//will do later
	}
	temp = 0;
 800035a:	2300      	movs	r3, #0
 800035c:	60fb      	str	r3, [r7, #12]
	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	799b      	ldrb	r3, [r3, #6]
 8000362:	001a      	movs	r2, r3
 8000364:	687b      	ldr	r3, [r7, #4]
 8000366:	791b      	ldrb	r3, [r3, #4]
 8000368:	005b      	lsls	r3, r3, #1
 800036a:	409a      	lsls	r2, r3
 800036c:	0013      	movs	r3, r2
 800036e:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	681b      	ldr	r3, [r3, #0]
 8000374:	689a      	ldr	r2, [r3, #8]
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	791b      	ldrb	r3, [r3, #4]
 800037a:	0019      	movs	r1, r3
 800037c:	2303      	movs	r3, #3
 800037e:	408b      	lsls	r3, r1
 8000380:	43db      	mvns	r3, r3
 8000382:	0019      	movs	r1, r3
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	681b      	ldr	r3, [r3, #0]
 8000388:	400a      	ands	r2, r1
 800038a:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	681b      	ldr	r3, [r3, #0]
 8000390:	6899      	ldr	r1, [r3, #8]
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	681b      	ldr	r3, [r3, #0]
 8000396:	68fa      	ldr	r2, [r7, #12]
 8000398:	430a      	orrs	r2, r1
 800039a:	609a      	str	r2, [r3, #8]

	temp = 0;
 800039c:	2300      	movs	r3, #0
 800039e:	60fb      	str	r3, [r7, #12]
	//3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	79db      	ldrb	r3, [r3, #7]
 80003a4:	001a      	movs	r2, r3
 80003a6:	687b      	ldr	r3, [r7, #4]
 80003a8:	791b      	ldrb	r3, [r3, #4]
 80003aa:	005b      	lsls	r3, r3, #1
 80003ac:	409a      	lsls	r2, r3
 80003ae:	0013      	movs	r3, r2
 80003b0:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	681b      	ldr	r3, [r3, #0]
 80003b6:	68da      	ldr	r2, [r3, #12]
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	791b      	ldrb	r3, [r3, #4]
 80003bc:	0019      	movs	r1, r3
 80003be:	2303      	movs	r3, #3
 80003c0:	408b      	lsls	r3, r1
 80003c2:	43db      	mvns	r3, r3
 80003c4:	0019      	movs	r1, r3
 80003c6:	687b      	ldr	r3, [r7, #4]
 80003c8:	681b      	ldr	r3, [r3, #0]
 80003ca:	400a      	ands	r2, r1
 80003cc:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	681b      	ldr	r3, [r3, #0]
 80003d2:	68d9      	ldr	r1, [r3, #12]
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	681b      	ldr	r3, [r3, #0]
 80003d8:	68fa      	ldr	r2, [r7, #12]
 80003da:	430a      	orrs	r2, r1
 80003dc:	60da      	str	r2, [r3, #12]

	temp = 0;
 80003de:	2300      	movs	r3, #0
 80003e0:	60fb      	str	r3, [r7, #12]
	//4. configure the output type
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	7a1b      	ldrb	r3, [r3, #8]
 80003e6:	001a      	movs	r2, r3
 80003e8:	687b      	ldr	r3, [r7, #4]
 80003ea:	791b      	ldrb	r3, [r3, #4]
 80003ec:	409a      	lsls	r2, r3
 80003ee:	0013      	movs	r3, r2
 80003f0:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	681b      	ldr	r3, [r3, #0]
 80003f6:	685a      	ldr	r2, [r3, #4]
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	791b      	ldrb	r3, [r3, #4]
 80003fc:	0019      	movs	r1, r3
 80003fe:	2301      	movs	r3, #1
 8000400:	408b      	lsls	r3, r1
 8000402:	43db      	mvns	r3, r3
 8000404:	0019      	movs	r1, r3
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	681b      	ldr	r3, [r3, #0]
 800040a:	400a      	ands	r2, r1
 800040c:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	681b      	ldr	r3, [r3, #0]
 8000412:	6859      	ldr	r1, [r3, #4]
 8000414:	687b      	ldr	r3, [r7, #4]
 8000416:	681b      	ldr	r3, [r3, #0]
 8000418:	68fa      	ldr	r2, [r7, #12]
 800041a:	430a      	orrs	r2, r1
 800041c:	605a      	str	r2, [r3, #4]

	temp = 0;
 800041e:	2300      	movs	r3, #0
 8000420:	60fb      	str	r3, [r7, #12]
	//5. configure the alternative functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	795b      	ldrb	r3, [r3, #5]
 8000426:	2b02      	cmp	r3, #2
 8000428:	d13d      	bne.n	80004a6 <GPIO_Init+0x19e>
		//configure the alternative function
		uint8_t temp1, temp2 = 0;
 800042a:	250b      	movs	r5, #11
 800042c:	197b      	adds	r3, r7, r5
 800042e:	2200      	movs	r2, #0
 8000430:	701a      	strb	r2, [r3, #0]
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	791a      	ldrb	r2, [r3, #4]
 8000436:	240a      	movs	r4, #10
 8000438:	193b      	adds	r3, r7, r4
 800043a:	08d2      	lsrs	r2, r2, #3
 800043c:	701a      	strb	r2, [r3, #0]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	791a      	ldrb	r2, [r3, #4]
 8000442:	197b      	adds	r3, r7, r5
 8000444:	2107      	movs	r1, #7
 8000446:	400a      	ands	r2, r1
 8000448:	701a      	strb	r2, [r3, #0]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	681b      	ldr	r3, [r3, #0]
 800044e:	193a      	adds	r2, r7, r4
 8000450:	7812      	ldrb	r2, [r2, #0]
 8000452:	3208      	adds	r2, #8
 8000454:	0092      	lsls	r2, r2, #2
 8000456:	58d1      	ldr	r1, [r2, r3]
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	791b      	ldrb	r3, [r3, #4]
 800045c:	001a      	movs	r2, r3
 800045e:	230f      	movs	r3, #15
 8000460:	4093      	lsls	r3, r2
 8000462:	43db      	mvns	r3, r3
 8000464:	0018      	movs	r0, r3
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	681b      	ldr	r3, [r3, #0]
 800046a:	193a      	adds	r2, r7, r4
 800046c:	7812      	ldrb	r2, [r2, #0]
 800046e:	4001      	ands	r1, r0
 8000470:	3208      	adds	r2, #8
 8000472:	0092      	lsls	r2, r2, #2
 8000474:	50d1      	str	r1, [r2, r3]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 8000476:	687b      	ldr	r3, [r7, #4]
 8000478:	681b      	ldr	r3, [r3, #0]
 800047a:	193a      	adds	r2, r7, r4
 800047c:	7812      	ldrb	r2, [r2, #0]
 800047e:	3208      	adds	r2, #8
 8000480:	0092      	lsls	r2, r2, #2
 8000482:	58d1      	ldr	r1, [r2, r3]
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	7a5b      	ldrb	r3, [r3, #9]
 8000488:	001a      	movs	r2, r3
 800048a:	197b      	adds	r3, r7, r5
 800048c:	781b      	ldrb	r3, [r3, #0]
 800048e:	009b      	lsls	r3, r3, #2
 8000490:	409a      	lsls	r2, r3
 8000492:	0013      	movs	r3, r2
 8000494:	0018      	movs	r0, r3
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	681b      	ldr	r3, [r3, #0]
 800049a:	193a      	adds	r2, r7, r4
 800049c:	7812      	ldrb	r2, [r2, #0]
 800049e:	4301      	orrs	r1, r0
 80004a0:	3208      	adds	r2, #8
 80004a2:	0092      	lsls	r2, r2, #2
 80004a4:	50d1      	str	r1, [r2, r3]
	}
}
 80004a6:	46c0      	nop			; (mov r8, r8)
 80004a8:	46bd      	mov	sp, r7
 80004aa:	b004      	add	sp, #16
 80004ac:	bdb0      	pop	{r4, r5, r7, pc}

080004ae <GPIO_ToggleOutputPin>:
 *
 * @Note				-	none

 */

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 80004ae:	b580      	push	{r7, lr}
 80004b0:	b082      	sub	sp, #8
 80004b2:	af00      	add	r7, sp, #0
 80004b4:	6078      	str	r0, [r7, #4]
 80004b6:	000a      	movs	r2, r1
 80004b8:	1cfb      	adds	r3, r7, #3
 80004ba:	701a      	strb	r2, [r3, #0]

	pGPIOx->ODR = pGPIOx->ODR ^ (1 << PinNumber);
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	695b      	ldr	r3, [r3, #20]
 80004c0:	1cfa      	adds	r2, r7, #3
 80004c2:	7812      	ldrb	r2, [r2, #0]
 80004c4:	2101      	movs	r1, #1
 80004c6:	4091      	lsls	r1, r2
 80004c8:	000a      	movs	r2, r1
 80004ca:	405a      	eors	r2, r3
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	615a      	str	r2, [r3, #20]
}
 80004d0:	46c0      	nop			; (mov r8, r8)
 80004d2:	46bd      	mov	sp, r7
 80004d4:	b002      	add	sp, #8
 80004d6:	bd80      	pop	{r7, pc}

080004d8 <__libc_init_array>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	2600      	movs	r6, #0
 80004dc:	4d0c      	ldr	r5, [pc, #48]	; (8000510 <__libc_init_array+0x38>)
 80004de:	4c0d      	ldr	r4, [pc, #52]	; (8000514 <__libc_init_array+0x3c>)
 80004e0:	1b64      	subs	r4, r4, r5
 80004e2:	10a4      	asrs	r4, r4, #2
 80004e4:	42a6      	cmp	r6, r4
 80004e6:	d109      	bne.n	80004fc <__libc_init_array+0x24>
 80004e8:	2600      	movs	r6, #0
 80004ea:	f000 f819 	bl	8000520 <_init>
 80004ee:	4d0a      	ldr	r5, [pc, #40]	; (8000518 <__libc_init_array+0x40>)
 80004f0:	4c0a      	ldr	r4, [pc, #40]	; (800051c <__libc_init_array+0x44>)
 80004f2:	1b64      	subs	r4, r4, r5
 80004f4:	10a4      	asrs	r4, r4, #2
 80004f6:	42a6      	cmp	r6, r4
 80004f8:	d105      	bne.n	8000506 <__libc_init_array+0x2e>
 80004fa:	bd70      	pop	{r4, r5, r6, pc}
 80004fc:	00b3      	lsls	r3, r6, #2
 80004fe:	58eb      	ldr	r3, [r5, r3]
 8000500:	4798      	blx	r3
 8000502:	3601      	adds	r6, #1
 8000504:	e7ee      	b.n	80004e4 <__libc_init_array+0xc>
 8000506:	00b3      	lsls	r3, r6, #2
 8000508:	58eb      	ldr	r3, [r5, r3]
 800050a:	4798      	blx	r3
 800050c:	3601      	adds	r6, #1
 800050e:	e7f2      	b.n	80004f6 <__libc_init_array+0x1e>
 8000510:	08000538 	.word	0x08000538
 8000514:	08000538 	.word	0x08000538
 8000518:	08000538 	.word	0x08000538
 800051c:	0800053c 	.word	0x0800053c

08000520 <_init>:
 8000520:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000522:	46c0      	nop			; (mov r8, r8)
 8000524:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000526:	bc08      	pop	{r3}
 8000528:	469e      	mov	lr, r3
 800052a:	4770      	bx	lr

0800052c <_fini>:
 800052c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800052e:	46c0      	nop			; (mov r8, r8)
 8000530:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000532:	bc08      	pop	{r3}
 8000534:	469e      	mov	lr, r3
 8000536:	4770      	bx	lr
